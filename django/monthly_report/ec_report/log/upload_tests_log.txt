Thu, 29 Oct 2015 11:31:15:schema.py[line:102] DEBUG CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); (params None)
Thu, 29 Oct 2015 11:31:15:schema.py[line:102] DEBUG CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
Thu, 29 Oct 2015 11:31:15:schema.py[line:102] DEBUG CREATE TABLE "django_content_type__new" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, UNIQUE ("app_label", "model")); (params None)
Thu, 29 Oct 2015 11:31:15:schema.py[line:102] DEBUG INSERT INTO "django_content_type__new" ("model", "app_label", "id", "name") SELECT "model", "app_label", "id", "name" FROM "django_content_type"; (params [])
Thu, 29 Oct 2015 11:31:15:schema.py[line:102] DEBUG DROP TABLE "django_content_type"; (params [])
Thu, 29 Oct 2015 11:31:15:schema.py[line:102] DEBUG ALTER TABLE "django_content_type__new" RENAME TO "django_content_type"; (params [])
Thu, 29 Oct 2015 11:31:15:schema.py[line:102] DEBUG CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "codename" varchar(100) NOT NULL, UNIQUE ("content_type_id", "codename")); (params None)
Thu, 29 Oct 2015 11:31:15:schema.py[line:102] DEBUG CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); (params None)
Thu, 29 Oct 2015 11:31:15:schema.py[line:102] DEBUG CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"), UNIQUE ("group_id", "permission_id")); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "group_id" integer NOT NULL REFERENCES "auth_group" ("id"), UNIQUE ("user_id", "group_id")); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"), UNIQUE ("user_id", "permission_id")); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE INDEX "auth_permission_417f1b1c" ON "auth_permission" ("content_type_id"); (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE INDEX "auth_group_permissions_0e939a4f" ON "auth_group_permissions" ("group_id"); (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE INDEX "auth_group_permissions_8373b171" ON "auth_group_permissions" ("permission_id"); (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE INDEX "auth_user_groups_e8701ad4" ON "auth_user_groups" ("user_id"); (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE INDEX "auth_user_groups_0e939a4f" ON "auth_user_groups" ("group_id"); (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE INDEX "auth_user_user_permissions_e8701ad4" ON "auth_user_user_permissions" ("user_id"); (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE INDEX "auth_user_user_permissions_8373b171" ON "auth_user_user_permissions" ("permission_id"); (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id"), "user_id" integer NOT NULL REFERENCES "auth_user" ("id")); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE INDEX "django_admin_log_417f1b1c" ON "django_admin_log" ("content_type_id"); (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE INDEX "django_admin_log_e8701ad4" ON "django_admin_log" ("user_id"); (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "django_content_type__new" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL, UNIQUE ("app_label", "model")); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG INSERT INTO "django_content_type__new" ("model", "app_label", "id", "name") SELECT "model", "app_label", "id", "name" FROM "django_content_type"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG DROP TABLE "django_content_type"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG ALTER TABLE "django_content_type__new" RENAME TO "django_content_type"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "django_content_type__new" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, UNIQUE ("app_label", "model")); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG INSERT INTO "django_content_type__new" ("model", "app_label", "id") SELECT "model", "app_label", "id" FROM "django_content_type"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG DROP TABLE "django_content_type"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG ALTER TABLE "django_content_type__new" RENAME TO "django_content_type"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "auth_permission__new" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL, UNIQUE ("content_type_id", "codename")); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG INSERT INTO "auth_permission__new" ("content_type_id", "codename", "id", "name") SELECT "content_type_id", "codename", "id", "name" FROM "auth_permission"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG DROP TABLE "auth_permission"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG ALTER TABLE "auth_permission__new" RENAME TO "auth_permission"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE INDEX "auth_permission_417f1b1c" ON "auth_permission" ("content_type_id"); (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "auth_user__new" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "email" varchar(254) NOT NULL); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG INSERT INTO "auth_user__new" ("username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined") SELECT "username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined" FROM "auth_user"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG DROP TABLE "auth_user"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG ALTER TABLE "auth_user__new" RENAME TO "auth_user"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "auth_user__new" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(30) NOT NULL UNIQUE); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG INSERT INTO "auth_user__new" ("username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined") SELECT "username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined" FROM "auth_user"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG DROP TABLE "auth_user"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG ALTER TABLE "auth_user__new" RENAME TO "auth_user"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "auth_user__new" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_login" datetime NULL); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG INSERT INTO "auth_user__new" ("username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined") SELECT "username", "first_name", "last_name", "is_active", "email", "is_superuser", "is_staff", "last_login", "password", "id", "date_joined" FROM "auth_user"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG DROP TABLE "auth_user"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG ALTER TABLE "auth_user__new" RENAME TO "auth_user"; (params [])
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "report_show_ec" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "number" varchar(40) NOT NULL, "product" varchar(50) NOT NULL, "state" varchar(40) NOT NULL, "theme" varchar(100) NOT NULL, "change_big_type" varchar(40) NOT NULL, "change_small_type" varchar(40) NOT NULL, "found_department" varchar(40) NOT NULL, "submit_date" datetime NOT NULL, "physics_veneer_name" varchar(40) NOT NULL, "logic_veneer_name" varchar(40) NOT NULL, "voluntary_submit" varchar(40) NOT NULL, "team" varchar(40) NOT NULL, "repetition" varchar(40) NOT NULL, "excel_month" varchar(10) NOT NULL); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); (params None)
Thu, 29 Oct 2015 11:31:16:schema.py[line:102] DEBUG CREATE INDEX "django_session_de54fa62" ON "django_session" ("expire_date"); (params [])
Thu, 29 Oct 2015 11:31:16:tests.py[line:80] INFO 创建excel文件成功
Thu, 29 Oct 2015 11:31:16:tests.py[line:87] INFO setUp test "number=u'614004808394'" database not exist, so do not need to delete
Thu, 29 Oct 2015 11:31:16:views.py[line:41] DEBUG 上传成功，文件路径为：history_files/send_file.xls
Thu, 29 Oct 2015 11:31:16:views.py[line:52] DEBUG 打开本地excel文件成功
Thu, 29 Oct 2015 11:31:16:views.py[line:54] DEBUG 打开本地excel工作表Sheet1成功
Thu, 29 Oct 2015 11:31:16:tests.py[line:97] INFO tearDown test "number=u'614004808394'" database exist, and already deleted
Thu, 29 Oct 2015 11:31:16:views.py[line:23] DEBUG index.html request content: {'session': <django.contrib.sessions.backends.db.SessionStore object at 0x34f3450>, 'COOKIES': {}, '_post_parse_error': False, 'resolver_match': ResolverMatch(func=report_show.views.index, args=(), kwargs={}, url_name=None, app_name=None, namespaces=[]), '_dont_enforce_csrf_checks': True, '_stream': <django.core.handlers.wsgi.LimitedStream object at 0x34f33d0>, '_read_started': False, 'META': {u'HTTP_COOKIE': u'', u'wsgi.multithread': False, u'SCRIPT_NAME': u'', u'wsgi.input': <django.test.client.FakePayload object at 0x317bf10>, u'REQUEST_METHOD': 'GET', u'PATH_INFO': u'/index/', u'SERVER_PROTOCOL': 'HTTP/1.1', u'QUERY_STRING': '', u'wsgi.version': (1, 0), u'SERVER_NAME': 'testserver', u'REMOTE_ADDR': '127.0.0.1', u'wsgi.run_once': False, u'wsgi.errors': <_io.BytesIO object at 0x34e1230>, u'wsgi.multiprocess': True, u'wsgi.url_scheme': 'http', u'SERVER_PORT': '80', u'CSRF_COOKIE': u'5l927SSMXZEMTXUlTe3NdJ1Vom64goYW'}, 'environ': {u'HTTP_COOKIE': u'', u'wsgi.multithread': False, u'SCRIPT_NAME': u'', u'wsgi.input': <django.test.client.FakePayload object at 0x317bf10>, u'REQUEST_METHOD': 'GET', u'PATH_INFO': u'/index/', u'SERVER_PROTOCOL': 'HTTP/1.1', u'QUERY_STRING': '', u'wsgi.version': (1, 0), u'SERVER_NAME': 'testserver', u'REMOTE_ADDR': '127.0.0.1', u'wsgi.run_once': False, u'wsgi.errors': <_io.BytesIO object at 0x34e1230>, u'wsgi.multiprocess': True, u'wsgi.url_scheme': 'http', u'SERVER_PORT': '80', u'CSRF_COOKIE': u'5l927SSMXZEMTXUlTe3NdJ1Vom64goYW'}, 'path_info': u'/index/', '_messages': <django.contrib.messages.storage.fallback.FallbackStorage object at 0x34f3490>, 'path': u'/index/', 'csrf_processing_done': True, 'method': 'GET', 'user': <SimpleLazyObject: <function <lambda> at 0x350c7d0>>}
Thu, 29 Oct 2015 11:31:16:views.py[line:43] DEBUG index.html summary : 
Thu, 29 Oct 2015 11:31:16:views.py[line:45] DEBUG total_number : 1
Thu, 29 Oct 2015 11:31:16:views.py[line:45] DEBUG repetition_number : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:45] DEBUG leak_rate : 100.0
Thu, 29 Oct 2015 11:31:16:views.py[line:45] DEBUG refused_or_canceled_number : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:45] DEBUG carry_out_number : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:45] DEBUG total_valid_number : 1
Thu, 29 Oct 2015 11:31:16:views.py[line:45] DEBUG internal_leak_number : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:45] DEBUG optimization_number : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:45] DEBUG self_commit_number : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:45] DEBUG requirement_number : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:52] DEBUG state.html request content: {'session': <django.contrib.sessions.backends.db.SessionStore object at 0x3510690>, 'COOKIES': {}, '_post_parse_error': False, 'resolver_match': ResolverMatch(func=report_show.views.state, args=(), kwargs={}, url_name=None, app_name=None, namespaces=[]), '_dont_enforce_csrf_checks': True, '_stream': <django.core.handlers.wsgi.LimitedStream object at 0x3510c90>, '_read_started': False, 'META': {u'HTTP_COOKIE': u'', u'wsgi.multithread': False, u'SCRIPT_NAME': u'', u'wsgi.input': <django.test.client.FakePayload object at 0x34f3250>, u'REQUEST_METHOD': 'GET', u'PATH_INFO': u'/state/', u'SERVER_PROTOCOL': 'HTTP/1.1', u'QUERY_STRING': '', u'wsgi.version': (1, 0), u'SERVER_NAME': 'testserver', u'REMOTE_ADDR': '127.0.0.1', u'wsgi.run_once': False, u'wsgi.errors': <_io.BytesIO object at 0x34e1650>, u'wsgi.multiprocess': True, u'wsgi.url_scheme': 'http', u'SERVER_PORT': '80', u'CSRF_COOKIE': u'0WPMuSu7EkRa7fbrSZcdafE2gTL80ita'}, 'environ': {u'HTTP_COOKIE': u'', u'wsgi.multithread': False, u'SCRIPT_NAME': u'', u'wsgi.input': <django.test.client.FakePayload object at 0x34f3250>, u'REQUEST_METHOD': 'GET', u'PATH_INFO': u'/state/', u'SERVER_PROTOCOL': 'HTTP/1.1', u'QUERY_STRING': '', u'wsgi.version': (1, 0), u'SERVER_NAME': 'testserver', u'REMOTE_ADDR': '127.0.0.1', u'wsgi.run_once': False, u'wsgi.errors': <_io.BytesIO object at 0x34e1650>, u'wsgi.multiprocess': True, u'wsgi.url_scheme': 'http', u'SERVER_PORT': '80', u'CSRF_COOKIE': u'0WPMuSu7EkRa7fbrSZcdafE2gTL80ita'}, 'path_info': u'/state/', '_messages': <django.contrib.messages.storage.fallback.FallbackStorage object at 0x3510390>, 'path': u'/state/', 'csrf_processing_done': True, 'method': 'GET', 'user': <SimpleLazyObject: <function <lambda> at 0x350c758>>}
Thu, 29 Oct 2015 11:31:16:views.py[line:70] DEBUG state.html dictstate : 
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG researching_count : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG implementating : []
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG approval_queue_count : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG confirming_refuse : []
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG approval_queue : []
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG invalid_count : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG confirmed_refuse_count : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG researching : []
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG invalid : []
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG reported_count : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG reported : []
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG allcount : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG confirmed_refuse : []
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG confirming_refuse_count : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG closed : []
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG implementating_count : 0
Thu, 29 Oct 2015 11:31:16:views.py[line:72] DEBUG closed_count : 0
